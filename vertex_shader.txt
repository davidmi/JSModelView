attribute vec3 aVertexPosition;
attribute vec3 aVertexNormal;

uniform mat4 uMVMatrix;
uniform mat4 uPMatrix;
uniform mat3 uNMatrix;

varying vec3 vLightWeighting;

void main(void) {
    vec3 lightDirecVector = vec3(1.0, 0, 0);
    vec3 lightColor = vec3(1.0, 1.0, 1.0);
    vec3 ambient = vec3(0.3, 0.3, 0.3);
    vec3 transformedNormal = uNMatrix * normalize(aVertexNormal);
    float directionLightWeighting = max(dot(transformedNormal , lightDirecVector), 0.0); // d
    vLightWeighting = ambient + lightColor * directionLightWeighting;

// Incorporate the Perspective and Model-View matrix
    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
}
